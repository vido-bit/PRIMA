var L01_FirstFudge;
(function (L01_FirstFudge) {
    var ƒ = FudgeCore;
    window.addEventListener("load", init);
    let viewport = new ƒ.Viewport();
    let node = new ƒ.Node("Test");
    function init(_event) {
        const canvas = document.querySelector("canvas");
        let cmpCamera = new ƒ.ComponentCamera();
        cmpCamera.mtxPivot.translateZ(15);
        cmpCamera.mtxPivot.rotateY(180);
        console.log(cmpCamera);
        spaceShipsTop();
        spaceShipsMiddle();
        spaceShipsBottom();
        createFlak();
        viewport.initialize("Viewport", node, cmpCamera, canvas);
        viewport.draw();
    }
    function createFlak() {
        let flakNode = new ƒ.Node("Flugabwehrkanone");
        node.appendChild(flakNode);
        let flakMesh = new ƒ.MeshCube("Cube");
        flakNode.addComponent(new ƒ.ComponentMesh(flakMesh));
        flakNode.addComponent(new ƒ.ComponentTransform());
        flakNode.getComponent(ƒ.ComponentMesh).mtxPivot.scale(new ƒ.Vector3(1.5, 1.5, 1.5));
        flakNode.getComponent(ƒ.ComponentMesh).mtxPivot.translateY(-2.75);
        let flakMaterial = new ƒ.Material("flakMaterial", ƒ.ShaderUniColor, new ƒ.CoatColored(new ƒ.Color(0, 0, 1, 1)));
        let cmpFlakMaterial = new ƒ.ComponentMaterial(flakMaterial);
        flakNode.addComponent(cmpFlakMaterial);
        let pipeNode = new ƒ.Node("Kanonenrohr");
        flakNode.appendChild(pipeNode);
        let pipeMesh = new ƒ.MeshCube("Rohr");
        pipeNode.addComponent(new ƒ.ComponentMesh(pipeMesh));
        pipeNode.addComponent(new ƒ.ComponentTransform());
        pipeNode.getComponent(ƒ.ComponentMesh).mtxPivot.scale(new ƒ.Vector3(0.5, 1.5, 0.5));
        pipeNode.getComponent(ƒ.ComponentMesh).mtxPivot.translateY(-2.25);
        let pipeMaterial = new ƒ.Material("flakMaterial", ƒ.ShaderUniColor, new ƒ.CoatColored(new ƒ.Color(0, 0, 1, 1)));
        let cmpPipeMaterial = new ƒ.ComponentMaterial(pipeMaterial);
        pipeNode.addComponent(cmpPipeMaterial);
    }
    function spaceShipsTop() {
        let shipNode1 = new ƒ.Node("spaceShip");
        node.addChild(shipNode1);
        let shipNode2 = new ƒ.Node("spaceShip");
        node.addChild(shipNode2);
        let shipNode3 = new ƒ.Node("spaceShip");
        node.addChild(shipNode3);
        let shipNode4 = new ƒ.Node("spaceShip");
        node.addChild(shipNode4);
        let shipNode5 = new ƒ.Node("spaceShip");
        node.addChild(shipNode5);
        let shipNode6 = new ƒ.Node("spaceShip");
        node.addChild(shipNode6);
        let shipNode7 = new ƒ.Node("spaceShip");
        node.addChild(shipNode7);
        let spaceMesh1 = new ƒ.MeshSphere("Circle");
        let spaceMesh2 = new ƒ.MeshSphere("Circle");
        let spaceMesh3 = new ƒ.MeshSphere("Circle");
        let spaceMesh4 = new ƒ.MeshSphere("Circle");
        let spaceMesh5 = new ƒ.MeshSphere("Circle");
        let spaceMesh6 = new ƒ.MeshSphere("Circle");
        let spaceMesh7 = new ƒ.MeshSphere("Circle");
        shipNode1.addComponent(new ƒ.ComponentMesh(spaceMesh1));
        shipNode1.addComponent(new ƒ.ComponentTransform());
        shipNode1.getComponent(ƒ.ComponentMesh).mtxPivot.translateX(-6);
        shipNode1.getComponent(ƒ.ComponentMesh).mtxPivot.translateY(3);
        shipNode2.addComponent(new ƒ.ComponentMesh(spaceMesh2));
        shipNode2.addComponent(new ƒ.ComponentTransform());
        shipNode2.getComponent(ƒ.ComponentMesh).mtxPivot.translateX(-4);
        shipNode2.getComponent(ƒ.ComponentMesh).mtxPivot.translateY(3);
        shipNode3.addComponent(new ƒ.ComponentMesh(spaceMesh3));
        shipNode3.addComponent(new ƒ.ComponentTransform());
        shipNode3.getComponent(ƒ.ComponentMesh).mtxPivot.translateX(-2);
        shipNode3.getComponent(ƒ.ComponentMesh).mtxPivot.translateY(3);
        shipNode4.addComponent(new ƒ.ComponentMesh(spaceMesh4));
        shipNode4.addComponent(new ƒ.ComponentTransform());
        shipNode4.getComponent(ƒ.ComponentMesh).mtxPivot.translateY(3);
        shipNode5.addComponent(new ƒ.ComponentMesh(spaceMesh5));
        shipNode5.addComponent(new ƒ.ComponentTransform());
        shipNode5.getComponent(ƒ.ComponentMesh).mtxPivot.translateX(2);
        shipNode5.getComponent(ƒ.ComponentMesh).mtxPivot.translateY(3);
        shipNode6.addComponent(new ƒ.ComponentMesh(spaceMesh6));
        shipNode6.addComponent(new ƒ.ComponentTransform());
        shipNode6.getComponent(ƒ.ComponentMesh).mtxPivot.translateX(4);
        shipNode6.getComponent(ƒ.ComponentMesh).mtxPivot.translateY(3);
        shipNode7.addComponent(new ƒ.ComponentMesh(spaceMesh7));
        shipNode7.addComponent(new ƒ.ComponentTransform());
        shipNode7.getComponent(ƒ.ComponentMesh).mtxPivot.translateX(6);
        shipNode7.getComponent(ƒ.ComponentMesh).mtxPivot.translateY(3);
        let shipMaterial = new ƒ.Material("shipMaterial", ƒ.ShaderUniColor, new ƒ.CoatColored(new ƒ.Color(1, 0, 0, 1)));
        let shipMaterial2 = new ƒ.Material("shipMaterial2", ƒ.ShaderUniColor, new ƒ.CoatColored(new ƒ.Color(1, 1, 1, 1)));
        let cmpShipMaterial = new ƒ.ComponentMaterial(shipMaterial2);
        let cmpShipMaterial2 = new ƒ.ComponentMaterial(shipMaterial);
        let cmpShipMaterial3 = new ƒ.ComponentMaterial(shipMaterial2);
        let cmpShipMaterial4 = new ƒ.ComponentMaterial(shipMaterial);
        let cmpShipMaterial5 = new ƒ.ComponentMaterial(shipMaterial2);
        let cmpShipMaterial6 = new ƒ.ComponentMaterial(shipMaterial);
        let cmpShipMaterial7 = new ƒ.ComponentMaterial(shipMaterial2);
        shipNode1.addComponent(cmpShipMaterial);
        shipNode2.addComponent(cmpShipMaterial2);
        shipNode3.addComponent(cmpShipMaterial3);
        shipNode4.addComponent(cmpShipMaterial4);
        shipNode5.addComponent(cmpShipMaterial5);
        shipNode6.addComponent(cmpShipMaterial6);
        shipNode7.addComponent(cmpShipMaterial7);
    }
    function spaceShipsMiddle() {
        let shipNode1 = new ƒ.Node("spaceShip");
        node.addChild(shipNode1);
        let shipNode2 = new ƒ.Node("spaceShip");
        node.addChild(shipNode2);
        let shipNode3 = new ƒ.Node("spaceShip");
        node.addChild(shipNode3);
        let shipNode4 = new ƒ.Node("spaceShip");
        node.addChild(shipNode4);
        let shipNode5 = new ƒ.Node("spaceShip");
        node.addChild(shipNode5);
        let shipNode6 = new ƒ.Node("spaceShip");
        node.addChild(shipNode6);
        let shipNode7 = new ƒ.Node("spaceShip");
        node.addChild(shipNode7);
        let spaceMesh1 = new ƒ.MeshSphere("Circle");
        let spaceMesh2 = new ƒ.MeshSphere("Circle");
        let spaceMesh3 = new ƒ.MeshSphere("Circle");
        let spaceMesh4 = new ƒ.MeshSphere("Circle");
        let spaceMesh5 = new ƒ.MeshSphere("Circle");
        let spaceMesh6 = new ƒ.MeshSphere("Circle");
        let spaceMesh7 = new ƒ.MeshSphere("Circle");
        shipNode1.addComponent(new ƒ.ComponentMesh(spaceMesh1));
        shipNode1.addComponent(new ƒ.ComponentTransform());
        shipNode1.getComponent(ƒ.ComponentMesh).mtxPivot.translateX(-6);
        shipNode1.getComponent(ƒ.ComponentMesh).mtxPivot.translateY(1);
        shipNode2.addComponent(new ƒ.ComponentMesh(spaceMesh2));
        shipNode2.addComponent(new ƒ.ComponentTransform());
        shipNode2.getComponent(ƒ.ComponentMesh).mtxPivot.translateX(-4);
        shipNode2.getComponent(ƒ.ComponentMesh).mtxPivot.translateY(1);
        shipNode3.addComponent(new ƒ.ComponentMesh(spaceMesh3));
        shipNode3.addComponent(new ƒ.ComponentTransform());
        shipNode3.getComponent(ƒ.ComponentMesh).mtxPivot.translateX(-2);
        shipNode3.getComponent(ƒ.ComponentMesh).mtxPivot.translateY(1);
        shipNode4.addComponent(new ƒ.ComponentMesh(spaceMesh4));
        shipNode4.addComponent(new ƒ.ComponentTransform());
        shipNode4.getComponent(ƒ.ComponentMesh).mtxPivot.translateY(1);
        shipNode5.addComponent(new ƒ.ComponentMesh(spaceMesh5));
        shipNode5.addComponent(new ƒ.ComponentTransform());
        shipNode5.getComponent(ƒ.ComponentMesh).mtxPivot.translateX(2);
        shipNode5.getComponent(ƒ.ComponentMesh).mtxPivot.translateY(1);
        shipNode6.addComponent(new ƒ.ComponentMesh(spaceMesh6));
        shipNode6.addComponent(new ƒ.ComponentTransform());
        shipNode6.getComponent(ƒ.ComponentMesh).mtxPivot.translateX(4);
        shipNode6.getComponent(ƒ.ComponentMesh).mtxPivot.translateY(1);
        shipNode7.addComponent(new ƒ.ComponentMesh(spaceMesh7));
        shipNode7.addComponent(new ƒ.ComponentTransform());
        shipNode7.getComponent(ƒ.ComponentMesh).mtxPivot.translateX(6);
        shipNode7.getComponent(ƒ.ComponentMesh).mtxPivot.translateY(1);
        let shipMaterial = new ƒ.Material("shipMaterial", ƒ.ShaderUniColor, new ƒ.CoatColored(new ƒ.Color(1, 0, 0, 1)));
        let cmpShipMaterial = new ƒ.ComponentMaterial(shipMaterial);
        let shipMaterial2 = new ƒ.Material("shipMaterial2", ƒ.ShaderUniColor, new ƒ.CoatColored(new ƒ.Color(1, 1, 1, 1)));
        let cmpShipMaterial2 = new ƒ.ComponentMaterial(shipMaterial2);
        let cmpShipMaterial3 = new ƒ.ComponentMaterial(shipMaterial);
        let cmpShipMaterial4 = new ƒ.ComponentMaterial(shipMaterial2);
        let cmpShipMaterial5 = new ƒ.ComponentMaterial(shipMaterial);
        let cmpShipMaterial6 = new ƒ.ComponentMaterial(shipMaterial2);
        let cmpShipMaterial7 = new ƒ.ComponentMaterial(shipMaterial);
        shipNode1.addComponent(cmpShipMaterial);
        shipNode2.addComponent(cmpShipMaterial2);
        shipNode3.addComponent(cmpShipMaterial3);
        shipNode4.addComponent(cmpShipMaterial4);
        shipNode5.addComponent(cmpShipMaterial5);
        shipNode6.addComponent(cmpShipMaterial6);
        shipNode7.addComponent(cmpShipMaterial7);
    }
    function spaceShipsBottom() {
        let shipNode1 = new ƒ.Node("spaceShip");
        node.addChild(shipNode1);
        let shipNode2 = new ƒ.Node("spaceShip");
        node.addChild(shipNode2);
        let shipNode3 = new ƒ.Node("spaceShip");
        node.addChild(shipNode3);
        let shipNode4 = new ƒ.Node("spaceShip");
        node.addChild(shipNode4);
        let shipNode5 = new ƒ.Node("spaceShip");
        node.addChild(shipNode5);
        let shipNode6 = new ƒ.Node("spaceShip");
        node.addChild(shipNode6);
        let shipNode7 = new ƒ.Node("spaceShip");
        node.addChild(shipNode7);
        let spaceMesh1 = new ƒ.MeshSphere("Circle");
        let spaceMesh2 = new ƒ.MeshSphere("Circle");
        let spaceMesh3 = new ƒ.MeshSphere("Circle");
        let spaceMesh4 = new ƒ.MeshSphere("Circle");
        let spaceMesh5 = new ƒ.MeshSphere("Circle");
        let spaceMesh6 = new ƒ.MeshSphere("Circle");
        let spaceMesh7 = new ƒ.MeshSphere("Circle");
        shipNode1.addComponent(new ƒ.ComponentMesh(spaceMesh1));
        shipNode1.addComponent(new ƒ.ComponentTransform());
        shipNode1.getComponent(ƒ.ComponentMesh).mtxPivot.translateX(-6);
        shipNode1.getComponent(ƒ.ComponentMesh).mtxPivot.translateY(-1);
        shipNode2.addComponent(new ƒ.ComponentMesh(spaceMesh2));
        shipNode2.addComponent(new ƒ.ComponentTransform());
        shipNode2.getComponent(ƒ.ComponentMesh).mtxPivot.translateX(-4);
        shipNode2.getComponent(ƒ.ComponentMesh).mtxPivot.translateY(-1);
        shipNode3.addComponent(new ƒ.ComponentMesh(spaceMesh3));
        shipNode3.addComponent(new ƒ.ComponentTransform());
        shipNode3.getComponent(ƒ.ComponentMesh).mtxPivot.translateX(-2);
        shipNode3.getComponent(ƒ.ComponentMesh).mtxPivot.translateY(-1);
        shipNode4.addComponent(new ƒ.ComponentMesh(spaceMesh4));
        shipNode4.addComponent(new ƒ.ComponentTransform());
        shipNode4.getComponent(ƒ.ComponentMesh).mtxPivot.translateY(-1);
        shipNode5.addComponent(new ƒ.ComponentMesh(spaceMesh5));
        shipNode5.addComponent(new ƒ.ComponentTransform());
        shipNode5.getComponent(ƒ.ComponentMesh).mtxPivot.translateX(2);
        shipNode5.getComponent(ƒ.ComponentMesh).mtxPivot.translateY(-1);
        shipNode6.addComponent(new ƒ.ComponentMesh(spaceMesh6));
        shipNode6.addComponent(new ƒ.ComponentTransform());
        shipNode6.getComponent(ƒ.ComponentMesh).mtxPivot.translateX(4);
        shipNode6.getComponent(ƒ.ComponentMesh).mtxPivot.translateY(-1);
        shipNode7.addComponent(new ƒ.ComponentMesh(spaceMesh7));
        shipNode7.addComponent(new ƒ.ComponentTransform());
        shipNode7.getComponent(ƒ.ComponentMesh).mtxPivot.translateX(6);
        shipNode7.getComponent(ƒ.ComponentMesh).mtxPivot.translateY(-1);
        let shipMaterial = new ƒ.Material("shipMaterial", ƒ.ShaderUniColor, new ƒ.CoatColored(new ƒ.Color(1, 0, 0, 1)));
        let shipMaterial2 = new ƒ.Material("shipMaterial2", ƒ.ShaderUniColor, new ƒ.CoatColored(new ƒ.Color(1, 1, 1, 1)));
        let cmpShipMaterial = new ƒ.ComponentMaterial(shipMaterial2);
        let cmpShipMaterial2 = new ƒ.ComponentMaterial(shipMaterial);
        let cmpShipMaterial3 = new ƒ.ComponentMaterial(shipMaterial2);
        let cmpShipMaterial4 = new ƒ.ComponentMaterial(shipMaterial);
        let cmpShipMaterial5 = new ƒ.ComponentMaterial(shipMaterial2);
        let cmpShipMaterial6 = new ƒ.ComponentMaterial(shipMaterial);
        let cmpShipMaterial7 = new ƒ.ComponentMaterial(shipMaterial2);
        shipNode1.addComponent(cmpShipMaterial);
        shipNode2.addComponent(cmpShipMaterial2);
        shipNode3.addComponent(cmpShipMaterial3);
        shipNode4.addComponent(cmpShipMaterial4);
        shipNode5.addComponent(cmpShipMaterial5);
        shipNode6.addComponent(cmpShipMaterial6);
        shipNode7.addComponent(cmpShipMaterial7);
    }
})(L01_FirstFudge || (L01_FirstFudge = {}));
//# sourceMappingURL=spaceInvaders.js.map